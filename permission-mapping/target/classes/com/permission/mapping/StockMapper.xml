<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.permission.mapping.StockMapper" >
  <resultMap id="BaseResultMap" type="com.permission.pojo.Stock" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="Number" property="number" jdbcType="INTEGER" />
    <result column="Price" property="price" jdbcType="DECIMAL" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="User" property="user" jdbcType="VARCHAR" />
    <result column="Time" property="time" jdbcType="TIMESTAMP" />
    <result column="OrgId" property="orgid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.permission.pojo.Stock" extends="BaseResultMap" >
    <result column="Name" property="name" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, Number, Price, Status, User, Time, OrgId
  </sql>
  <sql id="Blob_Column_List" >
    Name
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stock
    where Id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="LoadUserListPage" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stock
    where  User=  = #{account}
    order by Id
  </select>
  
   <select id="LoadStocksListPage" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stock
    order by Id
  </select>
  
  
   <select id="LoadInOrgListPage" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stock
    where
    OrgId in
    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
       ${item}
   </foreach>
    order by Id
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stock
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.permission.pojo.Stock" >
    insert into stock (Id, Number, Price, 
      Status, User, Time, 
      OrgId, Name)
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{orgid,jdbcType=INTEGER}, #{name,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.permission.pojo.Stock" >
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="number != null" >
        Number,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="user != null" >
        User,
      </if>
      <if test="time != null" >
        Time,
      </if>
      <if test="orgid != null" >
        OrgId,
      </if>
      <if test="name != null" >
        Name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="orgid != null" >
        #{orgid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.permission.pojo.Stock" >
    update stock
    <set >
      <if test="number != null" >
        Number = #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        User = #{user,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        Time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="orgid != null" >
        OrgId = #{orgid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.permission.pojo.Stock" >
    update stock
    set Number = #{number,jdbcType=INTEGER},
      Price = #{price,jdbcType=DECIMAL},
      Status = #{status,jdbcType=INTEGER},
      User = #{user,jdbcType=VARCHAR},
      Time = #{time,jdbcType=TIMESTAMP},
      OrgId = #{orgid,jdbcType=INTEGER},
      Name = #{name,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.permission.pojo.Stock" >
    update stock
    set Number = #{number,jdbcType=INTEGER},
      Price = #{price,jdbcType=DECIMAL},
      Status = #{status,jdbcType=INTEGER},
      User = #{user,jdbcType=VARCHAR},
      Time = #{time,jdbcType=TIMESTAMP},
      OrgId = #{orgid,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>